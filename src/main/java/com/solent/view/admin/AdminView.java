/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.solent.view.admin;

import com.solent.controller.DataController;
import com.solent.objects.PickUpPoints;
import com.solent.objects.Route;
import com.solent.objects.Vehicle;
import com.solent.view.LoginPage;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableModel;

/**
 *
 * @author Mandeep
 */
public class AdminView extends javax.swing.JFrame {

    javax.swing.table.DefaultTableModel dtm ;
    /**
     * Creates new form AdminView
     */
    public AdminView() {
        initComponents();
        dtm = (javax.swing.table.DefaultTableModel)jTable2.getModel();
        insertRowToTable();
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton9 = new javax.swing.JButton();
        removePickPoint = new javax.swing.JButton();
        addPickUpPoint = new javax.swing.JButton();
        removeRoute = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        editRoute = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        export = new javax.swing.JButton();
        logout = new javax.swing.JButton();

        jButton9.setBackground(new java.awt.Color(255, 204, 204));
        jButton9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton9.setText("jButton1");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setBackground(new java.awt.Color(255, 204, 204));
        setBounds(new java.awt.Rectangle(130, 100, 0, 0));
        setResizable(false);

        removePickPoint.setBackground(new java.awt.Color(255, 204, 204));
        removePickPoint.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        removePickPoint.setText("removePickUpPoint");
        removePickPoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePickPoint(evt);
            }
        });

        addPickUpPoint.setBackground(new java.awt.Color(255, 204, 204));
        addPickUpPoint.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        addPickUpPoint.setText("Add PickUp Points");
        addPickUpPoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPickUpPoints(evt);
            }
        });

        removeRoute.setBackground(new java.awt.Color(255, 204, 204));
        removeRoute.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        removeRoute.setText("Remove Route");
        removeRoute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeRouteActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(255, 204, 204));
        jButton8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton8.setText("Add Route");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRoute(evt);
            }
        });

        editRoute.setBackground(new java.awt.Color(255, 204, 204));
        editRoute.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        editRoute.setText("Edit Route/Point");
        editRoute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editRoute(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(204, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Hello Admin, Welcome to the Solent Excursions");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Route", "Pick up Point", "carType", "Available seats", "Access"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        export.setBackground(new java.awt.Color(255, 204, 204));
        export.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        export.setText("Export");
        export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                export(evt);
            }
        });

        logout.setBackground(new java.awt.Color(255, 204, 204));
        logout.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        logout.setText("LogOut");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeRoute, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addPickUpPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removePickPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editRoute, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(export, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logout, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(removePickPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addPickUpPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(removeRoute, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editRoute, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(logout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(export, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void removePickPoint(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePickPoint
        int selectedRow = jTable2.getSelectedRow();
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(null, "Please select a Pick Up Point to remove.");
        }else{
            String route = jTable2.getValueAt(selectedRow, 0).toString();
            String pick = jTable2.getValueAt(selectedRow, 1).toString();
            DataController.removePickPoint(route, pick);
            JOptionPane.showMessageDialog(null, "Pick up point removed successfully");
            insertRowToTable();
        }
    }//GEN-LAST:event_removePickPoint

    private void addPickUpPoints(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPickUpPoints
        this.setVisible(false);
        new AddPickUpPoints().setVisible(true);
    }//GEN-LAST:event_addPickUpPoints

    private void removeRouteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeRouteActionPerformed
        int row = jTable2.getSelectedRow();
        if(row == -1 ){
            JOptionPane.showMessageDialog(null, "Please select a row of route to be deleted.");
            return;
        }
        String routeName = (String)dtm.getValueAt(row, 0);
        ArrayList<Route> routes = DataController.getRoutes();
        for(Route r : routes){
            if(r.getRouteName().equals(routeName)){
                routes.remove(r);
                DataController.setRoutes(routes);
                JOptionPane.showMessageDialog(null, "Route along with its pick up points gets deleted successuflly.");
                insertRowToTable();
            }
        }
    }//GEN-LAST:event_removeRouteActionPerformed

    private void addRoute(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRoute
        this.setVisible(false);
        new AddRoute().setVisible(true);
    }//GEN-LAST:event_addRoute

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void editRoute(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editRoute
        int selectedRow = jTable2.getSelectedRow();
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(null, "No route selected");
        }else{
            String routeName = jTable2.getValueAt(selectedRow, 0).toString();
            ArrayList<PickUpPoints> pickUpPoints = DataController.getPickUpPoints(routeName);
            StringBuilder builder = new StringBuilder();
            for(PickUpPoints p : pickUpPoints){
                String pickUpPointsName = p.getPickUpPointsName();
                builder.append(pickUpPointsName+",");
            }
            String points = new String(builder);
            this.setVisible(false);
            new EditRoute(routeName, points).setVisible(true);
        }
    }//GEN-LAST:event_editRoute

    private void export(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_export
         JFileChooser fchoose = new JFileChooser();
           int option = fchoose.showSaveDialog(this);
           if(option == JFileChooser.APPROVE_OPTION){
             String name = fchoose.getSelectedFile().getName(); 
             String path = fchoose.getSelectedFile().getParentFile().getPath();
             String file = path + "\\" + name + ".xls"; 
             export(jTable2, new File(file));
           }
    }//GEN-LAST:event_export

    
    public void export(JTable table, File file){
    try
    {
        TableModel m = table.getModel();
        FileWriter fw = new FileWriter(file);
      for(int i = 0; i < m.getColumnCount(); i++){
        fw.write(m.getColumnName(i) + "\t");
      }
      fw.write("\n");
      for(int i=0; i < m.getRowCount(); i++) {
        for(int j=0; j < m.getColumnCount(); j++) {
          fw.write(m.getValueAt(i,j).toString()+"\t");
        }
        fw.write("\n");
      }
      fw.close();
    }
    catch(IOException e){ System.out.println(e); }
  }
           
           
    private void logout(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout
        this.setVisible(false);
        new LoginPage().setVisible(true);
    }//GEN-LAST:event_logout

    
    private void insertRowToTable(){
        
        int count = dtm.getRowCount();
        
        while(count-- > 0){
            dtm.removeRow(count);
        }
        ArrayList<Route> routes = DataController.getRoutes();
        for(Route route : routes){
            for(PickUpPoints p : route.getPickUpPoints()){
                for(Vehicle v : p.getVehicles()){
                    Vector vec = new Vector();
                    vec.add(route.getRouteName());
                    vec.add(p.getPickUpPointsName());
                    vec.add(v.getVehicleType());
                    vec.add(v.getSeatNo());
                    vec.add("Disabled");
                    dtm.addRow(vec);
               
                }
            }
        }    
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPickUpPoint;
    private javax.swing.JButton editRoute;
    private javax.swing.JButton export;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton logout;
    private javax.swing.JButton removePickPoint;
    private javax.swing.JButton removeRoute;
    // End of variables declaration//GEN-END:variables
}
